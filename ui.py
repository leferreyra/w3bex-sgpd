#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Sun Mar 18 17:37:36 2012

import wx
from sgpd import *

data = Data()
data.load()

Clientes = data.objects['clientes']
Cobradores = data.objects['cobradores']
Pagos = data.objects ['pagos']



# begin wxGlade: extracode
# end wxGlade

class NuevoClienteFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: NuevoClienteFrame.__init__
        kwds["style"] = wx.CLOSE_BOX|wx.MINIMIZE_BOX|wx.SYSTEM_MENU
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, -1)
        self.bitmap_2 = wx.StaticBitmap(self.panel_1, -1, wx.Bitmap("/home/rooter/Projects/SGPD/img/titulo_nuevo_cliente.png", wx.BITMAP_TYPE_ANY))
        self.static_line_1_copy = wx.StaticLine(self.panel_1, -1)
        self.label_nombre = wx.StaticText(self.panel_1, -1, "Nombre:")
        self.text_nombre = wx.TextCtrl(self.panel_1, -1, "")
        self.label_numero = wx.StaticText(self.panel_1, -1, u"Número: ")
        self.text_numero = wx.TextCtrl(self.panel_1, -1, "")
        self.label_telefono = wx.StaticText(self.panel_1, -1, u"Teléfono: ")
        self.text_telefono = wx.TextCtrl(self.panel_1, -1, "")
        self.label_direccion = wx.StaticText(self.panel_1, -1, u"Dirección:")
        self.text_direccion = wx.TextCtrl(self.panel_1, -1, "")
        self.label_saldo = wx.StaticText(self.panel_1, -1, "Saldo:")
        self.label_value_saldo = wx.StaticText(self.panel_1, -1, "$ 0")
        self.label_cobrador = wx.StaticText(self.panel_1, -1, "Cobrador")
        self.combo_cobrador = wx.ComboBox(self.panel_1, -1, choices=["Roberto", "Jose", "Javier", "Maria", "Pedro", "Marcos"], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.label_comentarios = wx.StaticText(self.panel_1, -1, "Comentarios")
        self.text_comentarios = wx.TextCtrl(self.panel_1, -1, "", style=wx.TE_MULTILINE)
        self.list_productos = wx.ListCtrl(self.panel_1, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.button_agregar_producto = wx.Button(self.panel_1, -1, "Agregar Producto")
        self.button_quitar_producto = wx.Button(self.panel_1, -1, "Quitar Producto")
        self.static_line_3_copy = wx.StaticLine(self.panel_1, -1)
        self.button_crear = wx.Button(self.panel_1, -1, "Crear")
        self.button_cerrar = wx.Button(self.panel_1, -1, "Cerrar")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnAgregarProducto, self.button_agregar_producto)
        self.Bind(wx.EVT_BUTTON, self.OnQuitarProducto, self.button_quitar_producto)
        self.Bind(wx.EVT_BUTTON, self.OnCrearCliente, self.button_crear)
        self.Bind(wx.EVT_BUTTON, self.OnCerrar, self.button_cerrar)
        # end wxGlade

        self.parent = args[0] # Referencia al frame padre 
        
        self.list_productos.InsertColumn(-1, "Producto")
        self.list_productos.InsertColumn(-1, "Precio")
        self.list_productos.InsertColumn(-1, "Cuotas")

        ProductoColumn = self.list_productos.GetColumnWidth(1)
        ProductoColumn += self.list_productos.GetColumnWidth(2)
        ProductoColumn += self.list_productos.GetColumnWidth(3)
        
        self.list_productos.SetColumnWidth(0, 478 - ProductoColumn)

        self.combo_cobrador.Clear()
        global Cobradores
        for x in Cobradores:
                self.combo_cobrador.Append(x.nombre)
        self.combo_cobrador.SetSelection(0)

    def __set_properties(self):
        # begin wxGlade: NuevoClienteFrame.__set_properties
        self.SetTitle("Nuevo Cliente")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("/home/rooter/Projects/SGPD/img/app-icon.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((522, 609))
        self.label_nombre.SetMinSize((100, 17))
        self.text_nombre.SetMinSize((370, 27))
        self.text_nombre.SetFocus()
        self.label_numero.SetMinSize((100, 17))
        self.text_numero.SetMinSize((100, 27))
        self.label_telefono.SetMinSize((100, 17))
        self.text_telefono.SetMinSize((140, 25))
        self.label_direccion.SetMinSize((100, 17))
        self.text_direccion.SetMinSize((370, 27))
        self.label_saldo.SetMinSize((100, 17))
        self.label_value_saldo.SetMinSize((370, 18))
        self.label_value_saldo.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_cobrador.SetMinSize((100, 17))
        self.combo_cobrador.SetSelection(3)
        self.label_comentarios.SetMinSize((100, 17))
        self.text_comentarios.SetMinSize((350, 75))
        self.button_crear.SetFocus()
        self.button_crear.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: NuevoClienteFrame.__do_layout
        sizer_21 = wx.BoxSizer(wx.VERTICAL)
        sizer_4_copy = wx.BoxSizer(wx.VERTICAL)
        sizer_13_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2_copy = wx.BoxSizer(wx.VERTICAL)
        sizer_8_copy = wx.BoxSizer(wx.VERTICAL)
        sizer_9_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy_2_copy_1_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy_2_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy_1_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4_copy.Add(self.bitmap_2, 0, 0, 0)
        sizer_3_copy_1.Add(self.static_line_1_copy, 0, wx.EXPAND, 0)
        sizer_3_copy_copy_3.Add(self.label_nombre, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_3.Add(self.text_nombre, 0, wx.ALIGN_RIGHT, 0)
        sizer_2_copy.Add(sizer_3_copy_copy_3, 0, wx.ALL|wx.EXPAND, 10)
        sizer_3_copy_copy_copy_1.Add(self.label_numero, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_copy_1.Add(self.text_numero, 0, wx.ALIGN_RIGHT, 0)
        sizer_3_copy_copy_copy_1.Add(self.label_telefono, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_copy_1.Add(self.text_telefono, 0, 0, 0)
        sizer_2_copy.Add(sizer_3_copy_copy_copy_1, 0, wx.ALL|wx.EXPAND, 10)
        sizer_3_copy_copy_1_copy.Add(self.label_direccion, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_1_copy.Add(self.text_direccion, 0, wx.ALIGN_RIGHT, 0)
        sizer_2_copy.Add(sizer_3_copy_copy_1_copy, 0, wx.ALL|wx.EXPAND, 10)
        sizer_3_copy_copy_copy_copy.Add(self.label_saldo, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_copy_copy.Add(self.label_value_saldo, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2_copy.Add(sizer_3_copy_copy_copy_copy, 0, wx.ALL|wx.EXPAND, 10)
        sizer_3_copy_copy_2_copy.Add(self.label_cobrador, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_2_copy.Add(self.combo_cobrador, 0, 0, 0)
        sizer_2_copy.Add(sizer_3_copy_copy_2_copy, 0, wx.ALL|wx.EXPAND, 10)
        sizer_3_copy_copy_2_copy_1_copy.Add(self.label_comentarios, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_2_copy_1_copy.Add(self.text_comentarios, 0, 0, 0)
        sizer_2_copy.Add(sizer_3_copy_copy_2_copy_1_copy, 0, wx.ALL|wx.EXPAND, 10)
        sizer_8_copy.Add(self.list_productos, 1, wx.EXPAND, 0)
        sizer_9_copy.Add(self.button_agregar_producto, 1, wx.EXPAND, 0)
        sizer_9_copy.Add(self.button_quitar_producto, 1, wx.EXPAND, 0)
        sizer_8_copy.Add(sizer_9_copy, 0, wx.EXPAND, 0)
        sizer_2_copy.Add(sizer_8_copy, 1, wx.ALL|wx.EXPAND, 20)
        sizer_3_copy_1.Add(sizer_2_copy, 1, wx.TOP|wx.EXPAND, 10)
        sizer_3_copy_1.Add(self.static_line_3_copy, 0, wx.EXPAND, 0)
        sizer_4_copy.Add(sizer_3_copy_1, 1, wx.EXPAND, 0)
        sizer_13_copy.Add(self.button_crear, 0, wx.LEFT|wx.TOP|wx.BOTTOM, 10)
        sizer_13_copy.Add(self.button_cerrar, 0, wx.ALL, 10)
        sizer_4_copy.Add(sizer_13_copy, 0, wx.ALIGN_RIGHT, 0)
        self.panel_1.SetSizer(sizer_4_copy)
        sizer_21.Add(self.panel_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_21)
        self.Layout()
        self.Centre()
        # end wxGlade

    def OnCrearCliente(self, event): # wxGlade: NuevoClienteFrame.<event_handler>
        
        global Clientes, data

        nombre = self.text_nombre.GetValue()

        # Si no se le da un numero de cliente, buscamos uno que no este
        # siendo utilizado
        if self.text_numero.GetValue() != "":
                numero = self.text_numero.GetValue()
        else:
                idlist = []
                for x in Clientes:
                        idlist.append(x.id)

                for j in range(len(Clientes)+1):
                        if j not in idlist:
                                numero = j

        direccion = self.text_direccion.GetValue()
        nombre_cobrador = self.combo_cobrador.Value
        telefono = self.text_telefono.GetValue()
        comentarios = self.text_comentarios.GetValue()

        for i in Cobradores:
                if i.nombre == nombre_cobrador:
                        cobrador = i

        c = Cliente(int(numero))
        c.nombre = nombre
        c.cobrador = cobrador
        c.direccion = direccion
        c.telefono = telefono
        c.comentarios = comentarios

        for i in range(self.list_productos.GetItemCount()):
                producto = self.list_productos.GetItem(i, 0).GetText()
                precio = int(self.list_productos.GetItem(i, 1).GetText()[1:])
                cuotas = int(self.list_productos.GetItem(i, 2).GetText().split()[0])

                p = Producto(producto, precio, cuotas)
                c.productos.append(p)

        cobrador.clientes.append(c)
        Clientes.append(c)

        # Ordenamos la lista de clientes segun el id

        Clientes.sort(key = lambda x: x.id)

        data.save()
        self.parent.update()
        self.Close()
        

    def OnAgregarProducto(self, event): # wxGlade: NuevoClienteFrame.<event_handler>

        agregar_producto_frame = ProductosFrame(self, -1, "")
        agregar_producto_frame.Show()

    def OnQuitarProducto(self, event): # wxGlade: NuevoClienteFrame.<event_handler>

        dlg = wx.MessageDialog(self, 
            "Seguro que deseas eliminar este producto?",
            "Confirmar Quitar Producto", wx.OK|wx.CANCEL|wx.ICON_QUESTION)
        result = dlg.ShowModal()
        dlg.Destroy()

        if result == wx.ID_OK:
                self.list_productos.DeleteItem(self.list_productos.GetFocusedItem())

    def AgregarItemProducto(self, producto, precio, cuotas, event):

        itemid = self.list_productos.GetItemCount()
        self.list_productos.InsertStringItem(itemid,  "%s" % producto)
        self.list_productos.SetStringItem(itemid, 1, "$%d" % precio)
        self.list_productos.SetStringItem(itemid, 2, "%d ($%d)" % (cuotas, precio / cuotas))

        self.updateSaldo()

    def updateSaldo(self):
        saldo = 0
        for i in range(self.list_productos.GetItemCount()):
                saldo += int(self.list_productos.GetItem(i, 1).GetText()[1:])
        self.label_value_saldo.SetLabel("$%s" % saldo)
                
    def OnCerrar(self, event): # wxGlade: NuevoClienteFrame.<event_handler>
        self.Close()

# end of class NuevoClienteFrame


class ProductosFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ProductosFrame.__init__
        kwds["style"] = wx.CLOSE_BOX|wx.MINIMIZE_BOX|wx.TAB_TRAVERSAL
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_2 = wx.Panel(self, -1)
        self.bitmap_3 = wx.StaticBitmap(self.panel_2, -1, wx.Bitmap("/home/rooter/Projects/SGPD/img/titulo_agregar_producto.png", wx.BITMAP_TYPE_ANY))
        self.static_line_5 = wx.StaticLine(self.panel_2, -1)
        self.label_producto = wx.StaticText(self.panel_2, -1, "Producto:")
        self.text_nombre = wx.TextCtrl(self.panel_2, -1, "")
        self.label_precio = wx.StaticText(self.panel_2, -1, "Precio:")
        self.label_9 = wx.StaticText(self.panel_2, -1, "$")
        self.text_precio = wx.TextCtrl(self.panel_2, -1, "")
        self.label_8 = wx.StaticText(self.panel_2, -1, "Cuotas:")
        self.spin_cuotas = wx.SpinCtrl(self.panel_2, -1, "6", min=0, max=10000000)
        self.static_line_4 = wx.StaticLine(self.panel_2, -1)
        self.button_cancelar = wx.Button(self.panel_2, -1, "Cancelar")
        self.button_agregar = wx.Button(self.panel_2, -1, "Agregar")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnCancelar, self.button_cancelar)
        self.Bind(wx.EVT_BUTTON, self.OnAgregar, self.button_agregar)
        # end wxGlade

        self.parent = args[0] # Referencia al frame padre (Cliente, NuevoCliente)
        self.editado = False # Indica si se han hecho modificaciones al cliente.

    def __set_properties(self):
        # begin wxGlade: ProductosFrame.__set_properties
        self.SetTitle("Agregar Producto")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("/home/rooter/Projects/SGPD/img/app-icon.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((520, 252))
        self.bitmap_3.SetMinSize((520, 70))
        self.label_producto.SetMinSize((100, 17))
        self.text_nombre.SetMinSize((370, 27))
        self.text_nombre.SetFocus()
        self.label_precio.SetMinSize((100, 17))
        self.text_precio.SetMinSize((110, 27))
        self.label_8.SetMinSize((100, 17))
        self.button_agregar.SetFocus()
        self.button_agregar.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ProductosFrame.__do_layout
        sizer_22 = wx.BoxSizer(wx.VERTICAL)
        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12 = wx.BoxSizer(wx.VERTICAL)
        sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy_3_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_10.Add(self.bitmap_3, 0, 0, 0)
        sizer_10.Add(self.static_line_5, 0, wx.EXPAND, 0)
        sizer_3_copy_copy_3_copy.Add(self.label_producto, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_3_copy.Add(self.text_nombre, 0, wx.ALIGN_RIGHT, 0)
        sizer_12.Add(sizer_3_copy_copy_3_copy, 0, wx.ALL|wx.EXPAND, 10)
        sizer_14.Add(self.label_precio, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_14.Add(self.label_9, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_14.Add(self.text_precio, 0, wx.LEFT, 0)
        sizer_14.Add(self.label_8, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 40)
        sizer_14.Add(self.spin_cuotas, 0, 0, 0)
        sizer_12.Add(sizer_14, 0, wx.ALL|wx.EXPAND, 10)
        sizer_10.Add(sizer_12, 1, wx.TOP|wx.EXPAND, 10)
        sizer_10.Add(self.static_line_4, 0, wx.EXPAND, 0)
        sizer_11.Add(self.button_cancelar, 0, wx.ALL, 10)
        sizer_11.Add(self.button_agregar, 0, wx.RIGHT|wx.TOP|wx.BOTTOM, 10)
        sizer_10.Add(sizer_11, 0, wx.ALIGN_RIGHT, 0)
        self.panel_2.SetSizer(sizer_10)
        sizer_22.Add(self.panel_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_22)
        self.Layout()
        self.Centre()
        # end wxGlade

    def OnCancelar(self, event): # wxGlade: ProductosFrame.<event_handler>
        self.Close()

    def OnAgregar(self, event): # wxGlade: ProductosFrame.<event_handler>

        producto = self.text_nombre.GetValue()
        precio = int(self.text_precio.GetValue())
        cuotas = int(self.spin_cuotas.GetValue())

        self.parent.AgregarItemProducto(producto, precio, cuotas, event)
        self.Close()

        
# end of class ProductosFrame


class CobradoresFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: CobradoresFrame.__init__
        kwds["style"] = wx.CLOSE_BOX|wx.MINIMIZE_BOX|wx.TAB_TRAVERSAL
        wx.Frame.__init__(self, *args, **kwds)
        self.bitmap_4 = wx.StaticBitmap(self, -1, wx.Bitmap("/home/rooter/Projects/SGPD/img/titulo_administrar_cobradores.png", wx.BITMAP_TYPE_ANY))
        self.static_line_5_copy = wx.StaticLine(self, -1)
        self.list_cobradores = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.label_10 = wx.StaticText(self, -1, "Nombre: ")
        self.text_nombre = wx.TextCtrl(self, -1, "")
        self.button_agregar = wx.Button(self, -1, "Agregar")
        self.button_quitar = wx.Button(self, -1, "Quitar")
        self.static_line_4_copy = wx.StaticLine(self, -1)
        self.button_cerrar = wx.Button(self, -1, "Cerrar")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnAgregar, self.button_agregar)
        self.Bind(wx.EVT_BUTTON, self.OnQuitar, self.button_quitar)
        self.Bind(wx.EVT_BUTTON, self.OnCerrar, self.button_cerrar)
        # end wxGlade

        self.setData()



    def __set_properties(self):
        # begin wxGlade: CobradoresFrame.__set_properties
        self.SetTitle("Cobradores")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("/home/rooter/Projects/SGPD/img/app-icon.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((520, 441))
        self.text_nombre.SetMinSize((200, 27))
        self.button_cerrar.SetFocus()
        self.button_cerrar.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: CobradoresFrame.__do_layout
        sizer_10_copy = wx.BoxSizer(wx.VERTICAL)
        sizer_11_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_15 = wx.BoxSizer(wx.VERTICAL)
        sizer_16 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_10_copy.Add(self.bitmap_4, 0, 0, 0)
        sizer_10_copy.Add(self.static_line_5_copy, 0, wx.EXPAND, 0)
        sizer_15.Add(self.list_cobradores, 1, wx.EXPAND, 0)
        sizer_16.Add(self.label_10, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_16.Add(self.text_nombre, 1, wx.ALIGN_CENTER_VERTICAL, 70)
        sizer_16.Add(self.button_agregar, 0, wx.LEFT, 5)
        sizer_16.Add(self.button_quitar, 0, wx.LEFT, 5)
        sizer_15.Add(sizer_16, 0, wx.TOP|wx.EXPAND, 10)
        sizer_10_copy.Add(sizer_15, 1, wx.ALL|wx.EXPAND, 20)
        sizer_10_copy.Add(self.static_line_4_copy, 0, wx.EXPAND, 0)
        sizer_11_copy.Add(self.button_cerrar, 0, wx.ALL, 10)
        sizer_10_copy.Add(sizer_11_copy, 0, wx.ALIGN_RIGHT, 0)
        self.SetSizer(sizer_10_copy)
        self.Layout()
        self.Centre()
        # end wxGlade

    def setData(self):
        global Cobradores

        self.list_cobradores.InsertColumn(-1, "Cobrador")
        self.list_cobradores.InsertColumn(-1, "Clientes", width = 100)

        self.list_cobradores.SetColumnWidth(0, 478 - self.list_cobradores.GetColumnWidth(1))

        for c in Cobradores:
                self.list_cobradores.InsertStringItem(Cobradores.index(c), c.nombre)
                self.list_cobradores.SetStringItem(Cobradores.index(c), 1, "%d" % len(c.clientes))

    def update(self):
        self.list_cobradores.DeleteAllItems()
        self.text_nombre.SetValue("")
        self.setData()

    def OnAgregar(self, event): # wxGlade: CobradoresFrame.<event_handler>
        global Cobradores, data
        nombre = self.text_nombre.GetValue()
        c = Cobrador(nombre)
        Cobradores.append(c)
        data.save()
        self.update()

    def OnQuitar(self, event): # wxGlade: CobradoresFrame.<event_handler>
        print "Event handler `OnQuitar' not implemented"
        event.Skip()

    def OnCerrar(self, event): # wxGlade: CobradoresFrame.<event_handler>
        self.Close()

# end of class CobradoresFrame


class ImprimirPlanillasFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ImprimirPlanillasFrame.__init__
        kwds["style"] = wx.CLOSE_BOX|wx.MINIMIZE_BOX|wx.TAB_TRAVERSAL
        wx.Frame.__init__(self, *args, **kwds)
        self.bitmap_5 = wx.StaticBitmap(self, -1, wx.Bitmap("/home/rooter/Projects/SGPD/img/titulo_imprimir_planillas.png", wx.BITMAP_TYPE_ANY))
        self.static_line_5_copy_copy = wx.StaticLine(self, -1)
        self.list_planillas = wx.ListCtrl(self, -1, style=wx.LC_LIST|wx.SUNKEN_BORDER)
        self.static_line_4_copy_copy = wx.StaticLine(self, -1)
        self.button_cancelar = wx.Button(self, -1, "Cancelar")
        self.button_imprimir = wx.Button(self, -1, "Imprimir")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: ImprimirPlanillasFrame.__set_properties
        self.SetTitle("Imprimir Planillas")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("/home/rooter/Projects/SGPD/img/app-icon.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((520, 389))
        self.button_imprimir.SetFocus()
        self.button_imprimir.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ImprimirPlanillasFrame.__do_layout
        sizer_17 = wx.BoxSizer(wx.VERTICAL)
        sizer_10_copy_copy = wx.BoxSizer(wx.VERTICAL)
        sizer_11_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_15_copy = wx.BoxSizer(wx.VERTICAL)
        sizer_10_copy_copy.Add(self.bitmap_5, 0, 0, 0)
        sizer_10_copy_copy.Add(self.static_line_5_copy_copy, 0, wx.EXPAND, 0)
        sizer_15_copy.Add(self.list_planillas, 1, wx.EXPAND, 0)
        sizer_10_copy_copy.Add(sizer_15_copy, 1, wx.ALL|wx.EXPAND, 20)
        sizer_10_copy_copy.Add(self.static_line_4_copy_copy, 0, wx.EXPAND, 0)
        sizer_11_copy_copy.Add(self.button_cancelar, 0, wx.LEFT|wx.TOP|wx.BOTTOM, 10)
        sizer_11_copy_copy.Add(self.button_imprimir, 0, wx.ALL, 10)
        sizer_10_copy_copy.Add(sizer_11_copy_copy, 0, wx.ALIGN_RIGHT, 0)
        sizer_17.Add(sizer_10_copy_copy, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_17)
        self.Layout()
        # end wxGlade

# end of class ImprimirPlanillasFrame


class CargarPlanillasFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: CargarPlanillasFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.bitmap_6 = wx.StaticBitmap(self, -1, wx.Bitmap("/home/rooter/Projects/SGPD/img/cargar_planillas_titulo.png", wx.BITMAP_TYPE_ANY))
        self.static_line_6 = wx.StaticLine(self, -1)
        self.label_cobrador = wx.StaticText(self, -1, "Cobrador:")
        self.combo_cobrador = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.datepicker_ctrl_1 = wx.DatePickerCtrl(self, -1)
        self.list_cargar_planillas = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.button_cancelar = wx.Button(self, -1, "Cancelar")
        self.button_cargar = wx.Button(self, -1, "Cargar")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: CargarPlanillasFrame.__set_properties
        self.SetTitle("Cargar Datos de Planillas")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("/home/rooter/Projects/SGPD/img/app-icon.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((519, 615))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: CargarPlanillasFrame.__do_layout
        sizer_18 = wx.BoxSizer(wx.VERTICAL)
        sizer_19 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_20 = wx.BoxSizer(wx.VERTICAL)
        sizer_24 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_18.Add(self.bitmap_6, 0, 0, 0)
        sizer_18.Add(self.static_line_6, 0, wx.EXPAND, 0)
        sizer_24.Add(self.label_cobrador, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 10)
        sizer_24.Add(self.combo_cobrador, 0, 0, 0)
        sizer_24.Add(self.datepicker_ctrl_1, 0, wx.LEFT|wx.EXPAND, 40)
        sizer_20.Add(sizer_24, 0, wx.ALL|wx.EXPAND, 20)
        sizer_20.Add(self.list_cargar_planillas, 1, wx.LEFT|wx.RIGHT|wx.BOTTOM|wx.EXPAND, 20)
        sizer_18.Add(sizer_20, 1, wx.EXPAND, 10)
        sizer_19.Add(self.button_cancelar, 0, wx.ALL, 10)
        sizer_19.Add(self.button_cargar, 0, wx.RIGHT|wx.TOP|wx.BOTTOM, 10)
        sizer_18.Add(sizer_19, 0, wx.ALIGN_RIGHT, 0)
        self.SetSizer(sizer_18)
        self.Layout()
        # end wxGlade

# end of class CargarPlanillasFrame


class ClienteFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ClienteFrame.__init__
        kwds["style"] = wx.CLOSE_BOX|wx.MINIMIZE_BOX
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_3 = wx.Panel(self, -1)
        self.bitmap_1 = wx.StaticBitmap(self.panel_3, -1, wx.Bitmap("/home/rooter/Projects/SGPD/img/titulo_cliente.png", wx.BITMAP_TYPE_ANY))
        self.static_line_1 = wx.StaticLine(self.panel_3, -1)
        self.label_nombre = wx.StaticText(self.panel_3, -1, "Nombre:")
        self.label_value_nombre = wx.StaticText(self.panel_3, -1, "Leonardo Ezequiel Ferreyra")
        self.label_telefono = wx.StaticText(self.panel_3, -1, u"Teléfono: ")
        self.label_value_telefono = wx.StaticText(self.panel_3, -1, "4467367")
        self.label_direccion = wx.StaticText(self.panel_3, -1, u"Dirección:")
        self.label_value_direccion = wx.StaticText(self.panel_3, -1, "Mz 86 Pc 4 B 263 Viv. Fontana")
        self.label_saldo_copy = wx.StaticText(self.panel_3, -1, "Saldo:")
        self.label_value_saldo = wx.StaticText(self.panel_3, -1, "$2345")
        self.button_1 = wx.Button(self.panel_3, -1, "Pagos")
        self.label_cobrador = wx.StaticText(self.panel_3, -1, "Cobrador")
        self.combo_cobrador = wx.ComboBox(self.panel_3, -1, choices=["Roberto", "Jose", "Javier", "Maria", "Pedro", "Marcos"], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.label_comentarios = wx.StaticText(self.panel_3, -1, "Comentarios")
        self.text_comentarios = wx.TextCtrl(self.panel_3, -1, "", style=wx.TE_MULTILINE)
        self.list_productos = wx.ListCtrl(self.panel_3, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.button_agregar_producto = wx.Button(self.panel_3, -1, "Agregar Producto")
        self.button_quitar_producto = wx.Button(self.panel_3, -1, "Quitar Producto")
        self.static_line_3 = wx.StaticLine(self.panel_3, -1)
        self.button_eliminar = wx.Button(self.panel_3, -1, "Eliminar")
        self.button_editar = wx.Button(self.panel_3, -1, "Guardar")
        self.button_cerrar = wx.Button(self.panel_3, -1, "Cerrar")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnPagos, self.button_1)
        self.Bind(wx.EVT_COMBOBOX, self.OnCambiarCobrador, self.combo_cobrador)
        self.Bind(wx.EVT_TEXT, self.OnComentarios, self.text_comentarios)
        self.Bind(wx.EVT_BUTTON, self.OnAgregarProducto, self.button_agregar_producto)
        self.Bind(wx.EVT_BUTTON, self.OnQuitarProducto, self.button_quitar_producto)
        self.Bind(wx.EVT_BUTTON, self.OnEliminarCliente, self.button_eliminar)
        self.Bind(wx.EVT_BUTTON, self.OnGuardar, self.button_editar)
        self.Bind(wx.EVT_BUTTON, self.OnCerrar, self.button_cerrar)
        # end wxGlade

        self.parent = args[0] # Una referencia al frame padre


    def __set_properties(self):
        # begin wxGlade: ClienteFrame.__set_properties
        self.SetTitle("Cliente: Leonardo Ferreyra")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("/home/rooter/Projects/SGPD/img/app-icon.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((520, 609))
        self.SetFocus()
        self.label_nombre.SetMinSize((100, 17))
        self.label_value_nombre.SetMinSize((370, 18))
        self.label_value_nombre.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_telefono.SetMinSize((100, 17))
        self.label_value_telefono.SetMinSize((370, 18))
        self.label_value_telefono.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_direccion.SetMinSize((100, 17))
        self.label_value_direccion.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_saldo_copy.SetMinSize((100, 17))
        self.label_value_saldo.SetMinSize((100, 18))
        self.label_value_saldo.SetFont(wx.Font(11, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_cobrador.SetMinSize((100, 17))
        self.combo_cobrador.SetSelection(3)
        self.label_comentarios.SetMinSize((100, 17))
        self.text_comentarios.SetMinSize((350, 75))
        self.button_editar.Enable(False)
        self.button_cerrar.SetFocus()
        self.button_cerrar.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ClienteFrame.__do_layout
        sizer_23 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy_2_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(self.bitmap_1, 0, 0, 0)
        sizer_3.Add(self.static_line_1, 0, wx.EXPAND, 0)
        sizer_3_copy.Add(self.label_nombre, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy.Add(self.label_value_nombre, 0, 0, 0)
        sizer_2.Add(sizer_3_copy, 0, wx.ALL|wx.EXPAND, 10)
        sizer_3_copy_copy.Add(self.label_telefono, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy.Add(self.label_value_telefono, 0, 0, 0)
        sizer_2.Add(sizer_3_copy_copy, 0, wx.ALL|wx.EXPAND, 10)
        sizer_3_copy_copy_1.Add(self.label_direccion, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_1.Add(self.label_value_direccion, 0, 0, 0)
        sizer_2.Add(sizer_3_copy_copy_1, 0, wx.ALL|wx.EXPAND, 10)
        sizer_3_copy_copy_copy.Add(self.label_saldo_copy, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_copy.Add(self.label_value_saldo, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_copy.Add(self.button_1, 0, 0, 0)
        sizer_2.Add(sizer_3_copy_copy_copy, 0, wx.ALL|wx.EXPAND, 10)
        sizer_3_copy_copy_2.Add(self.label_cobrador, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_2.Add(self.combo_cobrador, 0, 0, 0)
        sizer_2.Add(sizer_3_copy_copy_2, 0, wx.ALL|wx.EXPAND, 10)
        sizer_3_copy_copy_2_copy_1.Add(self.label_comentarios, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_3_copy_copy_2_copy_1.Add(self.text_comentarios, 0, 0, 0)
        sizer_2.Add(sizer_3_copy_copy_2_copy_1, 0, wx.ALL|wx.EXPAND, 10)
        sizer_8.Add(self.list_productos, 1, wx.EXPAND, 0)
        sizer_9.Add(self.button_agregar_producto, 1, wx.EXPAND, 0)
        sizer_9.Add(self.button_quitar_producto, 1, wx.EXPAND, 0)
        sizer_8.Add(sizer_9, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_8, 1, wx.ALL|wx.EXPAND, 20)
        sizer_3.Add(sizer_2, 1, wx.TOP|wx.EXPAND, 10)
        sizer_3.Add(self.static_line_3, 0, wx.EXPAND, 0)
        sizer_4.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_13.Add(self.button_eliminar, 0, wx.ALL, 10)
        sizer_13.Add(self.button_editar, 0, wx.TOP|wx.BOTTOM, 10)
        sizer_13.Add(self.button_cerrar, 0, wx.ALL, 10)
        sizer_4.Add(sizer_13, 0, wx.ALIGN_RIGHT, 0)
        self.panel_3.SetSizer(sizer_4)
        sizer_23.Add(self.panel_3, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_23)
        self.Layout()
        self.Centre()
        # end wxGlade

        self.editado = False



    def setEditado(self, event):
        self.editado = True
        self.button_editar.Enable(True)

    def unsetEditado(self, event):
        self.editado = False
        self.button_editar.Enable(False)

    def setCliente(self, cliente):

        self.cliente = cliente
        self.SetTitle("Cliente: %s" % cliente.nombre)

        # Hacemos una copia de la lista de productos del cliente
        # para modificar la nueva, y luego guardarla...
        self.new_productos = []
        for i in self.cliente.productos:
                self.new_productos.append(i)

        self.label_value_nombre.SetLabel("%s (#%d)" % (cliente.nombre, cliente.id))
        self.label_value_telefono.SetLabel(cliente.telefono)
        self.label_value_saldo.SetLabel("$%s" % str(cliente.saldo))
        self.label_value_direccion.SetLabel(cliente.direccion)
        self.label_value_telefono.SetLabel(str(cliente.telefono))
        self.text_comentarios.SetValue(cliente.comentarios)

        self.combo_cobrador.Clear()
        global Cobradores
        for x in Cobradores:
                self.combo_cobrador.Append(x.nombre)
        self.combo_cobrador.SetSelection(Cobradores.index(cliente.cobrador))

        self.list_productos.InsertColumn(-1, "Producto")
        self.list_productos.InsertColumn(-1, "Precio")
        self.list_productos.InsertColumn(-1, "Cuotas" , width=100)
        self.list_productos.InsertColumn(-1, "Saldo")

        ProductoColumn = self.list_productos.GetColumnWidth(1)
        ProductoColumn += self.list_productos.GetColumnWidth(2)
        ProductoColumn += self.list_productos.GetColumnWidth(3)
        
        self.list_productos.SetColumnWidth(0, 478 - ProductoColumn)

        self.setProductosList()

        self.unsetEditado(-1)

    def OnEliminarCliente(self, event): # wxGlade: ClienteFrame.<event_handler>
        
        dlg = wx.MessageDialog(self, 
            "Estas seguro que deseas eliminar este cliente? Esto no se puede deshacer",
            "Confirmar Eliminar Cliente", wx.OK|wx.CANCEL|wx.ICON_QUESTION)
        result = dlg.ShowModal()
        dlg.Destroy()

        if result == wx.ID_OK:
                global Clientes, data

                for i in Clientes:
                        if i.id == self.cliente.id:
                                Clientes.remove(i)

                data.save()
                self.parent.update()
                self.Close()

    def AgregarItemProducto(self, producto, precio, cuotas, event):
        self.setEditado(event)  
        itemid = self.list_productos.GetItemCount()
        self.list_productos.InsertStringItem(itemid,  "%s" % producto)
        self.list_productos.SetStringItem(itemid, 1, "$%d" % precio)
        self.list_productos.SetStringItem(itemid, 2, "%d" % cuotas)
        self.list_productos.SetStringItem(itemid, 3, "$%d" % precio)

        p = Producto(producto, precio, cuotas)
        self.new_productos.append(p)

        self.updateProductosList()
        self.updateSaldo()

    def updateSaldo(self):
        saldo = 0
        for i in range(self.list_productos.GetItemCount()):
                saldo += int(self.list_productos.GetItem(i, 1).GetText()[1:])
        self.label_value_saldo.SetLabel("$%s" % saldo)

    def setProductosList(self):
        for i in self.new_productos:
                self.list_productos.InsertStringItem(self.new_productos.index(i), i.nombre)
                self.list_productos.SetStringItem(self.new_productos.index(i), 1, "$%d" % i.precio)
                self.list_productos.SetStringItem(self.new_productos.index(i), 2, "%d/%d ($%d)" % (i.cuotas_pagas, i.cuotas, i.cuota))
                self.list_productos.SetStringItem(self.new_productos.index(i), 3, "$%d" % i.saldo)

    def updateProductosList(self):
        self.list_productos.DeleteAllItems()
        self.setProductosList()

    def OnGuardar(self, event): # wxGlade: ClienteFrame.<event_handler>
        global data, Cobradores

        self.cliente.cobrador = Cobradores[self.combo_cobrador.GetSelection()];


        self.cliente.productos = self.new_productos
        self.cliente.comentarios = self.text_comentarios.GetValue()

        data.save()
        self.parent.update()
        self.unsetEditado(event)

    def OnCerrar(self, event): # wxGlade: ClienteFrame.<event_handler>
        
        if self.editado:
                dlg = wx.MessageDialog(self, 
                    "Desea salir sin guardar los cambios?",
                    "Salir?", wx.OK|wx.CANCEL|wx.ICON_QUESTION)
                result = dlg.ShowModal()
                dlg.Destroy()

                if result == wx.ID_OK:
                        self.Close()
        else:
                self.Close()

    def OnCambiarCobrador(self, event): # wxGlade: ClienteFrame.<event_handler>
        self.setEditado(event)

    def OnPagos(self, event): # wxGlade: ClienteFrame.<event_handler>
        print "Event handler `OnPagos' not implemented"
        event.Skip()

    def OnComentarios(self, event): # wxGlade: ClienteFrame.<event_handler>
        self.setEditado(event)

    def OnAgregarProducto(self, event): # wxGlade: ClienteFrame.<event_handler>

        agregar_producto_frame = ProductosFrame(self, -1, "")
        agregar_producto_frame.Show()

    def OnQuitarProducto(self, event): # wxGlade: ClienteFrame.<event_handler>

        dlg = wx.MessageDialog(self, 
            "Seguro que deseas eliminar este producto?",
            "Confirmar Quitar Producto", wx.OK|wx.CANCEL|wx.ICON_QUESTION)
        result = dlg.ShowModal()
        dlg.Destroy()

        if result == wx.ID_OK:

                self.new_productos.remove(self.new_productos[self.list_productos.GetFocusedItem()])
                self.list_productos.DeleteItem(self.list_productos.GetFocusedItem())
                self.updateProductosList()
                
                self.setEditado(event)

# end of class ClienteFrame


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.CAPTION|wx.CLOSE_BOX|wx.MINIMIZE_BOX|wx.MAXIMIZE_BOX|wx.SYSTEM_MENU|wx.RESIZE_BORDER|wx.FULL_REPAINT_ON_RESIZE|wx.CLIP_CHILDREN
        wx.Frame.__init__(self, *args, **kwds)
        self.notebook_1 = wx.Notebook(self, -1, style=0)
        self.notebook_1_pane_3 = wx.Panel(self.notebook_1, -1)
        self.morosos_panel = wx.Panel(self.notebook_1, -1)
        self.todos_panel = wx.Panel(self.notebook_1, -1)
        
        # Menu Bar
        self.frame_1_menubar = wx.MenuBar()
        self.ArchivoMenu = wx.Menu()
        self.cargar_backup = wx.MenuItem(self.ArchivoMenu, wx.NewId(), "Cargar archivo de Backup", "", wx.ITEM_NORMAL)
        self.ArchivoMenu.AppendItem(self.cargar_backup)
        self.hacer_backup = wx.MenuItem(self.ArchivoMenu, wx.NewId(), "Hacer Backup", "", wx.ITEM_NORMAL)
        self.ArchivoMenu.AppendItem(self.hacer_backup)
        self.ArchivoMenu.AppendSeparator()
        self.salir = wx.MenuItem(self.ArchivoMenu, wx.NewId(), "Salir", "", wx.ITEM_NORMAL)
        self.ArchivoMenu.AppendItem(self.salir)
        self.frame_1_menubar.Append(self.ArchivoMenu, "Archivo")
        self.herramientas = wx.Menu()
        self.herramientas.Append(wx.NewId(), "item", "", wx.ITEM_NORMAL)
        self.herramientas.Append(wx.NewId(), "item", "", wx.ITEM_NORMAL)
        self.frame_1_menubar.Append(self.herramientas, "Herramientas")
        self.ayuda = wx.Menu()
        self.manual = wx.MenuItem(self.ayuda, wx.NewId(), "Manual del Usuario", "Abrir el Manual del Usuario", wx.ITEM_NORMAL)
        self.ayuda.AppendItem(self.manual)
        self.ayuda.AppendSeparator()
        self.acerca = wx.MenuItem(self.ayuda, wx.NewId(), "Acerca de", "Acerca de SGPD w3bex.com", wx.ITEM_NORMAL)
        self.ayuda.AppendItem(self.acerca)
        self.frame_1_menubar.Append(self.ayuda, "Ayuda")
        self.SetMenuBar(self.frame_1_menubar)
        # Menu Bar end
        
        # Tool Bar
        self.frame_1_toolbar = wx.ToolBar(self, -1, style=wx.TB_HORIZONTAL|wx.TB_DOCKABLE)
        self.SetToolBar(self.frame_1_toolbar)
        self.frame_1_toolbar.AddLabelTool(1, "Nuevo Cliente", wx.Bitmap("/home/rooter/Projects/SGPD/img/new-client.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Agregar un Nuevo Cliente", "")
        self.frame_1_toolbar.AddSeparator()
        self.frame_1_toolbar.AddLabelTool(2, "Imprimir Planillas", wx.Bitmap("/home/rooter/Projects/SGPD/img/print-list.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Imprimir Planillas de Cobro", "")
        self.frame_1_toolbar.AddLabelTool(3, "Cargar Planillas", wx.Bitmap("/home/rooter/Projects/SGPD/img/load-list.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Ingresar los datos de las Planillas de Cobro", "")
        self.frame_1_toolbar.AddSeparator()
        self.frame_1_toolbar.AddLabelTool(4, "Generar Informe", wx.Bitmap("/home/rooter/Projects/SGPD/img/reports.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, u"Generar informe de saldos al día de hoy", "")
        self.frame_1_toolbar.AddSeparator()
        self.frame_1_toolbar.AddLabelTool(5, "Cobradores", wx.Bitmap("/home/rooter/Projects/SGPD/img/cobradores.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Administrar Cobradores", "")
        self.frame_1_toolbar.AddSeparator()
        # Tool Bar end
        self.list_todos = wx.ListCtrl(self.todos_panel, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.list_inactivos = wx.ListCtrl(self.morosos_panel, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.list_morosos = wx.ListCtrl(self.notebook_1_pane_3, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)
        self.label_total = wx.StaticText(self, -1, "TOTAL A COBRAR: $15350")
        self.static_line_2 = wx.StaticLine(self, -1, style=wx.LI_VERTICAL)
        self.label_total_atrazado = wx.StaticText(self, -1, "TOTAL ATRASADO: $654")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.OnCargarBackup, self.cargar_backup)
        self.Bind(wx.EVT_MENU, self.OnBackup, self.hacer_backup)
        self.Bind(wx.EVT_MENU, self.OnManual, self.manual)
        self.Bind(wx.EVT_MENU, self.OnAbout, self.acerca)
        self.Bind(wx.EVT_TOOL, self.OnNewClient, id=1)
        self.Bind(wx.EVT_TOOL, self.OnImprimirPlanillas, id=2)
        self.Bind(wx.EVT_TOOL, self.OnCargarPlanillas, id=3)
        self.Bind(wx.EVT_TOOL, self.OnGenerarInformes, id=4)
        self.Bind(wx.EVT_TOOL, self.OnOpenCobradores, id=5)
        self.Bind(wx.EVT_LIST_ITEM_ACTIVATED, self.OnClientListActivated, self.list_todos)
        self.Bind(wx.EVT_LIST_ITEM_ACTIVATED, self.OnClientListActivated, self.list_inactivos)
        # end wxGlade
        self.Bind(wx.EVT_PAINT, self.OnPaint)

        # Insertar columnas en las tablas, de la ventana Principal
        self.list_todos.InsertColumn(-1, "N⁰")
        self.list_todos.InsertColumn(-1, "Cliente")
        self.list_todos.InsertColumn(-1, "Productos")
        self.list_todos.InsertColumn(-1, "Saldo", width=200)

        self.list_inactivos.InsertColumn(-1, "N⁰")
        self.list_inactivos.InsertColumn(-1, "Cliente")
        self.list_inactivos.InsertColumn(-1, "Productos")
        self.list_inactivos.InsertColumn(-1, "Saldo", width=200)

        self.list_morosos.InsertColumn(-1, "N⁰")
        self.list_morosos.InsertColumn(-1, "Cliente")
        self.list_morosos.InsertColumn(-1, "Productos")
        self.list_morosos.InsertColumn(-1, "Monto Atrasado", width=200)
        self.list_morosos.InsertColumn(-1, "Saldo",width=200)

        self.setData()

    def setData(self):      
        # Cargar los datos en las listas
        global Clientes
        total = 0;
        total_atrasado = 0;

        for i in xrange(len(Clientes)):

                if Clientes[i].saldo == 0:
                        self.list_inactivos.InsertStringItem(i, str(Clientes[i].id))
                        self.list_inactivos.SetStringItem(i, 1, Clientes[i].nombre)
                        self.list_inactivos.SetStringItem(i, 2, str(len(Clientes[i].productos)))
                        self.list_inactivos.SetStringItem(i, 3, "$%s" % str(Clientes[i].saldo))
                else:
                        self.list_todos.InsertStringItem(i, str(Clientes[i].id))
                        self.list_todos.SetStringItem(i, 1, Clientes[i].nombre)
                        self.list_todos.SetStringItem(i, 2, str(len(Clientes[i].productos)))
                        self.list_todos.SetStringItem(i, 3, "$%s" % str(Clientes[i].saldo))
                        total += Clientes[i].saldo

                if Clientes[i].esMoroso():
                        self.list_morosos.InsertStringItem(i, str(Clientes[i].id))
                        self.list_morosos.SetStringItem(i, 1, Clientes[i].nombre)
                        self.list_morosos.SetStringItem(i, 2, str(len(Clientes[i].productos)))
                        self.list_morosos.SetStringItem(i, 3, "$%d" % Clientes[i].saldo)
                        self.list_morosos.SetStringItem(i, 4, "$%d" % Clientes[i].saldo)
                        total_atrasado += Clientes[i].saldo

                                        

        self.label_total.SetLabel("TOTAL A COBRAR: $%s" % total)
        self.label_total_atrazado.SetLabel("TOTAL ATRASADO $%s" % total_atrasado)


    def update(self):
        # renovamos las referencias a los objetos recargados...
        global Clientes, Cobradores, Pagos, data

        Clientes = data.objects['clientes']
        Cobradores = data.objects['cobradores']
        Pagos = data.objects['pagos']

        self.list_todos.DeleteAllItems()
        self.list_morosos.DeleteAllItems()
        self.list_inactivos.DeleteAllItems()
        self.setData()
        

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("Sistema de Gestion de Pagos Diarios")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("/home/rooter/Projects/SGPD/img/app-icon.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((950, 613))
        self.frame_1_toolbar.Realize()
        self.label_total.SetMinSize((400, 29))
        self.label_total.SetFont(wx.Font(18, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.label_total_atrazado.SetMinSize((400, 29))
        self.label_total_atrazado.SetFont(wx.Font(18, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_5_copy = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_5.Add(self.list_todos, 1, wx.EXPAND, 0)
        self.todos_panel.SetSizer(sizer_5)
        sizer_5_copy.Add(self.list_inactivos, 1, wx.EXPAND, 0)
        self.morosos_panel.SetSizer(sizer_5_copy)
        sizer_7.Add(self.list_morosos, 1, wx.EXPAND, 0)
        self.notebook_1_pane_3.SetSizer(sizer_7)
        self.notebook_1.AddPage(self.todos_panel, "Activos")
        self.notebook_1.AddPage(self.morosos_panel, "Inactivos")
        self.notebook_1.AddPage(self.notebook_1_pane_3, "Morosos")
        sizer_1.Add(self.notebook_1, 1, wx.ALL|wx.EXPAND, 3)
        sizer_6.Add(self.label_total, 1, wx.ALL, 20)
        sizer_6.Add(self.static_line_2, 0, wx.EXPAND, 0)
        sizer_6.Add(self.label_total_atrazado, 1, wx.ALL, 20)
        sizer_1.Add(sizer_6, 0, 0, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        self.Centre()
        # end wxGlade

    def OnManual(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnManual' not implemented!"
        event.Skip()

    def OnAbout(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnAbout' not implemented!"
        event.Skip()

    def OnNewClient(self, event): # wxGlade: MyFrame.<event_handler>
        nuevo_cliente_frame = NuevoClienteFrame(self, -1, "")
        nuevo_cliente_frame.Show()
        

    def OnImprimirPlanillas(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnImprimirPlanillas' not implemented!"
        event.Skip()

    def OnCargarPlanillas(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnCargarPlanillas' not implemented!"
        event.Skip()

    def OnOpenPlanes(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnOpenPlanes' not implemented!"
        event.Skip()

    def OnOpenCobradores(self, event): # wxGlade: MyFrame.<event_handler>
        
        cobradores_frame = CobradoresFrame(self, -1, "")
        cobradores_frame.Show()

    def OnHoyEsFeriado(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler not implemented OnHoyEsFeriado"
        event.Skip()

    def OnGenerarInformes(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `OnGenerarInformes' not implemented"
        event.Skip()

    def OnClientListActivated(self, event): # wxGlade: MyFrame.<event_handler>
        #print event.GetColumn()
        #print event.GetIndex()
        client_frame = ClienteFrame(self, -1, "")
        client_frame.setCliente(Clientes[event.GetIndex()])
        client_frame.Show()

    def OnPaint(self, event):
        ClientColumn = self.list_todos.GetColumnWidth(0)
        ClientColumn += self.list_todos.GetColumnWidth(2)
        ClientColumn += self.list_todos.GetColumnWidth(3)
        #ClientColumn += self.list_todos.GetColumnWidth(4)
        self.list_todos.SetColumnWidth(1, 940 - ClientColumn)

        ClientColumn = self.list_morosos.GetColumnWidth(0)
        ClientColumn += self.list_morosos.GetColumnWidth(2)
        ClientColumn += self.list_morosos.GetColumnWidth(3)
        ClientColumn += self.list_morosos.GetColumnWidth(4)
        self.list_morosos.SetColumnWidth(1, 940 - ClientColumn)

        ClientColumn = self.list_inactivos.GetColumnWidth(0)
        ClientColumn += self.list_inactivos.GetColumnWidth(2)
        ClientColumn += self.list_inactivos.GetColumnWidth(3)
        #ClientColumn += self.list_todos.GetColumnWidth(4)
        self.list_inactivos.SetColumnWidth(1, 940 - ClientColumn)


    def OnCargarBackup(self, event): # wxGlade: MyFrame.<event_handler>
        
        # Abrir dialogo para elegir un archivo de backup..

        file_dialog = wx.FileDialog(self, style = wx.OPEN)
        if file_dialog.ShowModal() == wx.ID_OK:
                data.load(backup=file_dialog.GetPath())

        self.update()

    def OnBackup(self, event): # wxGlade: MyFrame.<event_handler>
        
        # Abrir dialogo para seleccionar ruta de destino del archivo de backup

        file_dialog = wx.FileDialog(self, style = wx.SAVE)
        if file_dialog.ShowModal() == wx.ID_OK:
                data.backup(file_dialog.GetPath())


# end of class MyFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    main_frame = MyFrame(None, -1, "")
    app.SetTopWindow(main_frame)
    main_frame.Show()
    app.MainLoop()


#This is sooooo coolll xD to have a vertical monitor !!!